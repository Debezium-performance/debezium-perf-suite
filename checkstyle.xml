<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<module name="Checker">

    <!-- Source code is not formatted using tabs -->
    <module name="FileTabCharacter" />

    <module name="TreeWalker">
        <!-- Checks for imports -->
        <module name="AvoidStarImport" />
        <module name="RedundantImport" />
        <module name="UnusedImports">
            <property name="processJavadoc" value="true"/>
        </module>

        <!-- Modifiers -->
        <module name="RedundantModifier"/>

        <!-- Checks for common coding problems -->
        <module name="EqualsHashCode" />
        <module name="IllegalInstantiation" />

        <!-- Miscellaneous other checks. -->
        <module name="PackageAnnotation" />
        <module name="CovariantEquals" />
        <module name="OneStatementPerLine" />
        <module name="EmptyStatement" />
        <module name="DefaultComesLast" />
        <module name="TypecastParenPad" />
        <module name="CovariantEquals" />

        <module name="MissingOverride"/>

        <module name="NeedBraces"/>

        <!-- Checks for whitespace after tokens -->
        <module name="WhitespaceAfter"/>

        <module name="WhitespaceAround">
            <property name="tokens" value="LCURLY,QUESTION,COLON,SLIST" />
            <property name="allowEmptyLambdas" value="true" />
        </module>

        <!-- Checks for blocks. You know, those {}'s -->
        <module name="LeftCurly">
            <property name="option" value="eol" />
        </module>

        <module name="RightCurly">
            <property name="option" value="alone"/>
        </module>

        <module name="ParenPad">
            <property name="tokens" value="CTOR_CALL, SUPER_CTOR_CALL" />
            <property name="option" value="nospace" />
        </module>

        <module name="RegexpSinglelineJava">
            <property name="format" value="System\.(out)|(err)\.print(ln)?\(" />
            <!-- The last sentence of the message is a keyword to trigger exclusion: see ExcludeTestPackages -->
            <property name="message" value="Not allowed to print to System.out: if you're damn sure you want it, disable Checkstyle on this line. [not required for tests]" />
            <property name="ignoreComments" value="true" />
        </module>

        <!-- Nobody should be using StringBuffer anymore -->
        <module name="RegexpSinglelineJava">
            <property name="format" value=" StringBuffer" />
            <!-- The last sentence of the message is a keyword to trigger exclusion: see ExcludeTestPackages -->
            <property name="message" value="Nobody should be using StringBuffer anymore" />
        </module>
        <module name="IllegalInstantiation">
            <property name="classes" value="java.lang.Boolean"/>
        </module>

        <!--  Avoid importing some packages -->
        <module name="IllegalImport">
            <!-- Should use TestNG -->
            <property name="illegalPkgs" value="org.testng"/>
        </module>
        <module name="IllegalImport">
            <!-- Should use ModeShape-specific annotations -->
            <property name="illegalPkgs" value="net.jcip.annotations, org.apache.http.annotation"/>
        </module>

        <!--
        Allow for suppressing sections of code using a starting and ending comment:
        // CHECKSTYLE\:OFF
        // CHECKSTYLE\:ON
        -->
        <module name="SuppressionCommentFilter" />

        <!-- Allow for suppressing sections of code using just a leading comment:
        // CHECKSTYLE IGNORE check FOR NEXT 2 LINES
        -->
        <module name="SuppressWithNearbyCommentFilter">
            <property name="commentFormat" value="CHECKSTYLE IGNORE (\w+) FOR NEXT (\d+) LINES"/>
            <property name="checkFormat" value="$1"/>
            <property name="influenceFormat" value="$2"/>
        </module>
    </module>
</module>